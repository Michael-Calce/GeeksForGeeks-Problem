class Solution{

  public:

    int Nodes(Node* root){

        if(root == NULL) return 0;

        return 1 + (Nodes(root->left) + Nodes(root->right));

    }

    void fill(Node* root , vector<int>& temp , int idx , int n){

        //if(idx == -1 || idx >= n ) return;

        if(root == NULL) return;

        temp[idx] += root->data;

        fill(root->left,temp,idx-1,n);

        fill(root->right,temp,idx+1,n);

    }

    vector <int> verticalSum(Node *root) {

        // add code here.

        int n = Nodes(root);

        vector<int> temp(1e5,0);

        int idx = 50000;

        fill(root,temp,idx,n);

        vector<int> result;

        bool flag = false;

        for(int i = 0 ; i < 1e5 ; i++){

            //cout<<temp[i]<<" ";

            if(temp[i] == 0 && flag == true) break;

            if(temp[i] == 0) continue;

            result.push_back(temp[i]);

            flag = true;

        }

        return result;

    }

};
